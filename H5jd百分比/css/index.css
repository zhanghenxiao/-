/* body很重要如果没设置好 后面怎么写都是错的  给body 设置100%就不用每个盒子都设置100%了 */
body {
  width: 100%;
  min-width: 320px;
  max-width: 640px;
  margin:  0 auto;
  color: #666;
  font-size: 14px;
  /* 相当于字体大小是14 X 1.5 = 21px */
  line-height: 1.5;
  font-family: Arial, Helvetica, sans-serif;
}

/*点击高亮我们需要清除清除  设置为transparent 完成透明*/
* {
  -webkit-tap-highlight-color: transparent;
}

/*在移动端浏览器默认的外观在iOS上加上这个属性才能给按钮和输入框自定义样式*/
input {
  -webkit-appearance: none;
}

/*禁用长按页面时的弹出菜单*/
img,
a {
  -webkit-touch-callout: none;
}


ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

/* 移动端的图片 底部也会默认有空隙 */
img {
  vertical-align: middle;
}
a {
  color: #000;
  text-decoration: none;
}
/* 发现news这个盒子在京东超市上面去了? 然后再看nav高度只有5 这里肯定需要清除浮动 清除浮动 */
.clearfix:after {
  content: '';
  display: table;
  clear: both;
}

/*若app 父盒子不占用高度，search-wrap设置relative时会完全覆盖住  */
.app {
  height: 45px;
}

.app ul li{
  float: left;
  height: 45px;
  background-color: #333;
  text-align: center;
  line-height: 45px;
  color: #fff;
}

.app ul li:nth-child(1) {
  width: 8%;
}
.app ul li:nth-child(1) img{
  /* 设置宽度，图片高度会等比例缩放 */
  width: 10px;
}


.app ul li:nth-child(2) {
  width: 10%;
}
/* 图片与文字的基线对齐，为什么上面的图片能居中，因为上面图片小 */
.app ul li:nth-child(2) img{
  width: 30px;
  /* 设置图片与文字的中线对齐  */
  vertical-align: middle;
}

.app ul li:nth-child(3) {
  width: 57%;
}

.app ul li:nth-child(4) {
  width: 25%;
  background-color: #C82519;
}
/* 设置固定定位的盒子一个要有宽 ，这里场景必须要设置一个宽度区间不然这个盒子会随着浏览器变大而变大*/
.search-wrap {
  position: fixed;
  height: 44px;
  overflow: hidden;
  /* 必须的宽 */
  width: 100%;
  /* 宽度区间 */
  min-width: 320px;
  max-width: 640px;
} 
.search-btn {
  position: absolute;
  left: 0;
  top: 0;
  width: 40px;
  height: 44px;
}
/* <!-- 这张图的第一个写法 --> */
/* .search-btn img {
  width: 20px;
  height: 18px;
  margin: 14px 0 0 15px;
} */
/* <!-- 这张图的第二个写法使用伪类 --> */
.search-btn::before {
  content: '';
  display: block;
  /* 设置稿上占的位置 */
  width: 20px;
  height: 18px;
  background: url(../images/s-btn.png) no-repeat;
  /* 缩小背景图为 20px 18px;*/
  background-size: 20px 18px;
  margin: 14px 0 0 15px;
}

.search-login {
  position: absolute;
  right: 0;
  top: 0;
  width: 40px;
  height: 44px;
  line-height: 44px;
  color: #fff;
}
/* 子元素设置margin-top : 7px;外造成外边距合并 整体search-wrap盒子 会往下移7px   解决search-wrap 设overflow: hidden; */
.search {
  position: relative;
  height: 30px;
  margin: 0 50px;
  background-color: #fff;
  margin-top: 7px;
  border-radius: 15px;
}
.jd-icon {
  width: 20px;
  height: 15px;
  position: absolute;
  top: 8px;
  left: 10px;
  /* 注意图片路径images /images ./images都不能获取到。。。 */
  background: url(../images/jd.png) no-repeat;
  background-size: 20px 15px;
}
/* 默认在盒子内部 这里不管是after 还是before */
.jd-icon::after {
  content: '';
  display: block;
  width: 1px;
  height: 15px;
  /* color无法给伪类上色，  background-color才行*/
  /* color: red; */
  background-color: #ccc;
  position: absolute;
  top: 0;
  left: 25px;
}

.sou {
  width: 18px;
  height: 15px;
  position: absolute;
  top: 8px;
  left: 45px;
  /* 移动端二倍图的做法：1先在firework中把图缩小到一半 2根据  3background-size也要缩写到原来的一半  */
  background: url(../images/jd-sprites.png) no-repeat -81px 0;
  background-size: 200px auto;
}
/* width: 100%; 父级多宽子元素就有多宽 ，宽度是等比例缩放*/
.slide img{
  width: 100%;
}

.brand {
  border-radius: 10px 10px 0 0;
  /* 被图片遮住，超过父盒子容器的需掩藏 */
  overflow: hidden;
}
.brand div {
  float: left;
  width: 33.33%;
}

/* 父级有多宽就占多宽 */
.brand div img {
  width: 100%;
}

nav {
  padding-top: 5px;
}
/* 使用浮动后 就会把行内元素 转换为块级元素 我们这里就不用写转换的代码 */
nav a {
  float: left;
  width: 20%;
  text-align: center;
 
}

nav a img {
  width: 40px;
  margin: 10px 0;
}
/* 块级元素才会在下方 */
nav a span {
  display: block;
}

.news {
  padding-top: 20px;
}
/* 加了1px的左边框 盒子会掉下去 我们使用c3的盒模型能解决问题 */
.news a {
  float: left;
  box-sizing: border-box;
}

/* 图片完全填充父级元素 */
.news img{
  width: 100%;
}

.news a:nth-child(1) {
  width: 50%;
}
/* 从第2个开始后面的所有 */
.news a:nth-child(n+2) {
  width: 25%;
  border-left: 1px solid #ccc;
}